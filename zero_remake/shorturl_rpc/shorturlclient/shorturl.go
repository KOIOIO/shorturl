// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.2
// Source: shortUrl.proto

package shorturlclient

import (
	"context"

	"example.com/shorturl/short-url/zero_remake/shorturl_rpc/types/shortUrl"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	GenerateShortUrlRequest  = shortUrl.GenerateShortUrlRequest
	GenerateShortUrlResponse = shortUrl.GenerateShortUrlResponse
	HandleShortRequest       = shortUrl.HandleShortRequest
	HandleShortResponse      = shortUrl.HandleShortResponse

	ShortUrl interface {
		GenerateShortUrl(ctx context.Context, in *GenerateShortUrlRequest, opts ...grpc.CallOption) (*GenerateShortUrlResponse, error)
		HandleShort(ctx context.Context, in *HandleShortRequest, opts ...grpc.CallOption) (*HandleShortResponse, error)
	}

	defaultShortUrl struct {
		cli zrpc.Client
	}
)

func NewShortUrl(cli zrpc.Client) ShortUrl {
	return &defaultShortUrl{
		cli: cli,
	}
}

func (m *defaultShortUrl) GenerateShortUrl(ctx context.Context, in *GenerateShortUrlRequest, opts ...grpc.CallOption) (*GenerateShortUrlResponse, error) {
	client := shortUrl.NewShortUrlClient(m.cli.Conn())
	return client.GenerateShortUrl(ctx, in, opts...)
}

func (m *defaultShortUrl) HandleShort(ctx context.Context, in *HandleShortRequest, opts ...grpc.CallOption) (*HandleShortResponse, error) {
	client := shortUrl.NewShortUrlClient(m.cli.Conn())
	return client.HandleShort(ctx, in, opts...)
}
